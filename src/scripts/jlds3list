#!/usr/bin/env python
"""
    S3 Bucket list

    @author: Jean-Lou Dupont
"""
__version__="0.4"
import os, sys, argparse
op=os.path

try:
    if os.environ.get("DEVMODE", False):
        raise        
    import jldaws #@UnusedImport
except:
    ### must be in dev mode then    
    this_dir=op.dirname(__file__)
    lib_path=op.abspath(op.join(this_dir, ".."))
    sys.path.insert(0, lib_path)
    import jldaws #@UnusedImport

########################################################################

DESC="""Simple S3 bucket listing - version %s

Waits for a stdin trigger (either newline or JSON object with "topic" field), fetches the list of files in specified bucket, outputs on stdout.
""" % __version__
DEFAULTS={
          }

def main():
    try:
        import jldaws.do_setup  #@UnusedImport
        import logging
        import jldaws.do_checks #@UnusedImport
        
        parser=argparse.ArgumentParser(description=DESC, fromfile_prefix_chars='@', formatter_class=argparse.RawTextHelpFormatter)
        
        parser.add_argument('-bn',  dest='bucket_name',   type=str, help="Bucket name",   required=True)
        parser.add_argument('-pr',  dest='bucket_prefix', type=str, help="Bucket prefix", default=None)
        parser.add_argument('-af',  dest='alternate_format', action="store_true", help="Alternate format", default=False)
        parser.add_argument('-jbn', dest='just_basename',    action="store_true", help="Output just the basename", default=False)
        parser.add_argument('-trt', dest="trigger_topic",  type=str, help="Trigger topic (JSON input)", default=None)
        parser.add_argument('-es',  dest="execute_start",  type=str, help="Execute at start even when trigger is defined", action="store_true", default=False)
        
        from jldaws.script_s3list import run
        from jldaws.tools_sys import process_command_line
        args=process_command_line(parser)
        run(**args)

    except KeyboardInterrupt:
        logging.info("..Exiting")
        sys.exit(0)##no probs
        
    except Exception,e:
        logging.error(str(e))
        sys.exit(1)
        
sys.exit(main())
